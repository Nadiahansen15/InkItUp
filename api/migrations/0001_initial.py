# Generated by Django 3.2.9 on 2021-11-15 16:25

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('idappointment', models.IntegerField(db_column='idAppointment', primary_key=True, serialize=False)),
                ('datetime', models.DateTimeField(blank=True, db_column='DateTime', null=True)),
                ('sessionlenght', models.IntegerField(blank=True, db_column='SessionLenght', null=True)),
            ],
            options={
                'db_table': 'appointment',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('cpr', models.IntegerField(db_column='CPR', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=45, null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=45, null=True)),
                ('phonenumber', models.IntegerField(blank=True, db_column='PhoneNumber', null=True)),
                ('registered', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'customer',
            },
        ),
        migrations.CreateModel(
            name='Ink',
            fields=[
                ('batchnumber', models.IntegerField(db_column='BatchNumber', primary_key=True, serialize=False)),
                ('brand', models.CharField(blank=True, db_column='Brand', max_length=45, null=True)),
                ('colorcode', models.CharField(blank=True, db_column='ColorCode', max_length=15, null=True)),
                ('experationdate', models.DateTimeField(blank=True, db_column='ExperationDate', null=True)),
                ('price', models.IntegerField(blank=True, db_column='Price', null=True)),
            ],
            options={
                'db_table': 'ink',
            },
        ),
        migrations.CreateModel(
            name='Producer',
            fields=[
                ('cvr', models.IntegerField(db_column='CVR', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=45, null=True)),
                ('phonenumber', models.IntegerField(blank=True, db_column='PhoneNumber', null=True)),
                ('adress', models.CharField(blank=True, db_column='Adress', max_length=45, null=True)),
            ],
            options={
                'db_table': 'producer',
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('cvr', models.IntegerField(db_column='CVR', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=45, null=True)),
                ('phonenumber', models.CharField(blank=True, db_column='PhoneNumber', max_length=45, null=True)),
                ('adress', models.CharField(blank=True, db_column='Adress', max_length=45, null=True)),
            ],
            options={
                'db_table': 'supplier',
            },
        ),
        migrations.CreateModel(
            name='Tattoo',
            fields=[
                ('idtattoo', models.AutoField(db_column='idTattoo', primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=200, null=True)),
                ('placementonbody', models.CharField(blank=True, db_column='PlacementOnBody', max_length=45, null=True)),
                ('appointment_idappointment', models.ForeignKey(db_column='Appointment_idAppointment', on_delete=django.db.models.deletion.CASCADE, to='api.appointment')),
            ],
            options={
                'db_table': 'tattoo',
                'unique_together': {('idtattoo', 'appointment_idappointment')},
            },
        ),
        migrations.CreateModel(
            name='Tattooparlor',
            fields=[
                ('cvr', models.IntegerField(db_column='CVR', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=75, null=True)),
                ('adress', models.CharField(blank=True, db_column='Adress', max_length=45, null=True)),
                ('phonenumber', models.IntegerField(blank=True, db_column='PhoneNumber', null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=45, null=True)),
                ('supplier_cvr', models.ForeignKey(db_column='Supplier_CVR', on_delete=django.db.models.deletion.CASCADE, to='api.supplier')),
            ],
        ),
        migrations.CreateModel(
            name='ParlorHasInk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
                ('ink_batchnumber', models.ForeignKey(blank=True, db_column='Ink_batchnumber', null=True, on_delete=django.db.models.deletion.CASCADE, to='api.ink')),
                ('parlor_storageid', models.ForeignKey(blank=True, db_column='Parlor_storageID', null=True, on_delete=django.db.models.deletion.CASCADE, to='api.tattooparlor')),
            ],
            options={
                'db_table': 'parlor_has_ink',
            },
        ),
        migrations.AddField(
            model_name='ink',
            name='producer_cvr',
            field=models.ForeignKey(db_column='Producer_CVR', on_delete=django.db.models.deletion.CASCADE, to='api.producer'),
        ),
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('cpr', models.IntegerField(db_column='CPR', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=45, null=True)),
                ('phonenumber', models.IntegerField(blank=True, db_column='PhoneNumber', null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=45, null=True)),
                ('price', models.IntegerField(blank=True, db_column='Price', null=True)),
                ('tattooparlor_cvr', models.ForeignKey(db_column='Tattooparlor_CVR', on_delete=django.db.models.deletion.CASCADE, to='api.tattooparlor')),
            ],
            options={
                'db_table': 'artist',
            },
        ),
        migrations.AddField(
            model_name='appointment',
            name='artist_cpr',
            field=models.ForeignKey(db_column='Artist_CPR', on_delete=django.db.models.deletion.CASCADE, to='api.artist'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='customer_cpr',
            field=models.ForeignKey(db_column='Customer_CPR', on_delete=django.db.models.deletion.CASCADE, to='api.customer'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='tattooparlor_cvr',
            field=models.ForeignKey(db_column='Tattooparlor_CVR', on_delete=django.db.models.deletion.CASCADE, to='api.tattooparlor'),
        ),
        migrations.AlterUniqueTogether(
            name='ink',
            unique_together={('batchnumber', 'producer_cvr')},
        ),
        migrations.AlterUniqueTogether(
            name='appointment',
            unique_together={('idappointment', 'customer_cpr', 'tattooparlor_cvr')},
        ),
        migrations.CreateModel(
            name='TattooHasInk',
            fields=[
                ('tattoo_idtattoo', models.OneToOneField(db_column='Tattoo_idTattoo', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='api.tattoo')),
                ('ink_batchnumber', models.ForeignKey(db_column='Ink_BatchNumber', on_delete=django.db.models.deletion.CASCADE, to='api.ink')),
            ],
            options={
                'db_table': 'tattoo_has_ink',
                'unique_together': {('tattoo_idtattoo', 'ink_batchnumber')},
            },
        ),
        migrations.CreateModel(
            name='ProducerHasSupplier',
            fields=[
                ('producer_cvr', models.OneToOneField(db_column='Producer_CVR', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='api.producer')),
                ('supplier_cvr', models.ForeignKey(db_column='Supplier_CVR', on_delete=django.db.models.deletion.CASCADE, to='api.supplier')),
            ],
            options={
                'db_table': 'producer_has_supplier',
                'unique_together': {('producer_cvr', 'supplier_cvr')},
            },
        ),
    ]
